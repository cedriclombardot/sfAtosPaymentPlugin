<?php


/**
 * This class adds structure of 'sf_atos_cart' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 03/27/09 12:56:25
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    plugins.sfAtosPaymentPlugin.lib.model.map
 */
class sfAtosCartMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sfAtosPaymentPlugin.lib.model.map.sfAtosCartMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(sfAtosCartPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(sfAtosCartPeer::TABLE_NAME);
		$tMap->setPhpName('sfAtosCart');
		$tMap->setClassname('sfAtosCart');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('AMOUNT', 'Amount', 'INTEGER', true, null);

		$tMap->addColumn('MERCHANT_ID', 'MerchantId', 'VARCHAR', true, 15);

		$tMap->addColumn('MERCHANT_LANGUAGE', 'MerchantLanguage', 'VARCHAR', false, 2);

		$tMap->addColumn('MERCHANT_COUNTRY', 'MerchantCountry', 'VARCHAR', false, 2);

		$tMap->addColumn('TRANSACTION_ID', 'TransactionId', 'INTEGER', true, 6);

		$tMap->addColumn('PAYMENT_MEANS', 'PaymentMeans', 'VARCHAR', false, 128);

		$tMap->addColumn('TRANSMISSION_DATE', 'TransmissionDate', 'TIMESTAMP', true, null);

		$tMap->addColumn('PAYMENT_TIME', 'PaymentTime', 'TIMESTAMP', false, null);

		$tMap->addColumn('RESPONSE_CODE', 'ResponseCode', 'VARCHAR', false, 2);

		$tMap->addColumn('PAYMENT_CERTIFICATE', 'PaymentCertificate', 'VARCHAR', false, 12);

		$tMap->addColumn('AUTHORISATION_ID', 'AuthorisationId', 'VARCHAR', false, 10);

		$tMap->addColumn('CURRENCY_CODE', 'CurrencyCode', 'INTEGER', true, 3);

		$tMap->addColumn('CARD_NUMBER', 'CardNumber', 'VARCHAR', false, 7);

		$tMap->addColumn('CVV_FLAG', 'CvvFlag', 'INTEGER', false, 1);

		$tMap->addColumn('CVV_RESPONSE_CODE', 'CvvResponseCode', 'VARCHAR', false, 2);

		$tMap->addColumn('BANK_RESPONSE_CODE', 'BankResponseCode', 'VARCHAR', false, 2);

		$tMap->addColumn('COMPLEMENTARY_CODE', 'ComplementaryCode', 'VARCHAR', false, 2);

		$tMap->addColumn('COMPLEMENTARY_INFO', 'ComplementaryInfo', 'VARCHAR', false, 255);

		$tMap->addColumn('RETURN_CONTEXT', 'ReturnContext', 'VARCHAR', false, 256);

		$tMap->addColumn('CADDIE', 'Caddie', 'LONGVARCHAR', false, null);

		$tMap->addColumn('LANGUAGE', 'Language', 'VARCHAR', false, 2);

		$tMap->addColumn('CUSTOMER_ID', 'CustomerId', 'VARCHAR', true, 19);

		$tMap->addColumn('ORDER_ID', 'OrderId', 'VARCHAR', false, 32);

		$tMap->addColumn('CUSTOMER_EMAIL', 'CustomerEmail', 'VARCHAR', false, 128);

		$tMap->addColumn('CUSTOMER_IP_ADDRESS', 'CustomerIpAddress', 'VARCHAR', false, 19);

		$tMap->addColumn('CAPTURE_DAY', 'CaptureDay', 'INTEGER', false, 2);

		$tMap->addColumn('CAPTURE_MODE', 'CaptureMode', 'VARCHAR', false, 20);

		$tMap->addColumn('DATA', 'Data', 'BLOB', false, null);

	} // doBuild()

} // sfAtosCartMapBuilder
